#ifndef _BIEST_VIRTUAL_CASING_TEST_DATA_H_
#define _BIEST_VIRTUAL_CASING_TEST_DATA_H_

#ifdef __cplusplus
extern "C" {
#endif

/**
 * Create virtual-casing context and return its pointer.
 */
void* VirtualCasingCreateContextF();
void* VirtualCasingCreateContextD();

/**
 * Destroy virtual-casing context.
 *
 * @param[in,out] virtual-casing context pointer.
 */
void VirtualCasingDestroyContextF(void** ctx);
void VirtualCasingDestroyContextD(void** ctx);

/**
 * Setup the VirtualCasing instance.
 *
 * @param[in] digits number of decimal digits of accuracy.
 *
 * @param[in] NFP number of toroidal field periods. The surface as well as
 * the magnetic field must have this toroidal periodic symmetry.
 *
 * @param[in] Nt surface discretization order in toroidal direction (in one field period).
 *
 * @param[in] Np surface discretization order in poloidal direction.
 *
 * @param[in] X the surface coordinates in the order {x11, x12, ..., x1Np,
 * x21, x22, ... , xNtNp, y11, ... , z11, ...}.
 *
 * @param[in] src_Nt input B-field discretization order in toroidal direction (in one field period).
 *
 * @param[in] src_Np input B-field discretization order in poloidal direction.
 *
 * @param[in] trg_Nt output Bext-field discretization order in toroidal direction (in one field period).
 *
 * @param[in] trg_Np output Bext-field discretization order in poloidal direction.
 *
 * @param[in,out] virtual-casing context pointer.
 */
void VirtualCasingSetupF(int digits, int NFP, long Nt, long Np, const float* X, long src_Nt, long src_Np, long trg_Nt, long trg_Np, void* ctx);
void VirtualCasingSetupD(int digits, int NFP, long Nt, long Np, const double* X, long src_Nt, long src_Np, long trg_Nt, long trg_Np, void* ctx);

/**
 * Recover the Bext component from the total field B = Bext + Bint by
 * applying the virtual-casing principle:
 * Bext = B/2 + gradG[B . n] + BiotSavart[n x B]
 *
 * @param[out] Bext the component of magnetic field on the surface due to
 * currents in the exterior of the surface, computed using the
 * virtual-casing principle.
 *
 * @param[in] B the total magnetic field on the surface due to all currents.
 * B = {Bx11, Bx12, ..., Bx1Np, Bx21, Bx22, ... , BxNtNp, By11, ... , Bz11, ...},
 * where Nt and Np are the number of discretizations in toroidal and
 * poloidal directions.
 */

/**
 * Recover the Bext component from the total field B = Bext + Bint by
 * applying the virtual-casing principle:
 * Bext = B/2 + gradG[B . n] + BiotSavart[n x B]
 *
 * @param[out] Bext the component of magnetic field on the surface due to
 * currents in the exterior of the surface, computed using the
 * virtual-casing principle.
 *
 * @param[in] B the total magnetic field on the surface due to all currents.
 * B = {Bx11, Bx12, ..., Bx1Np, Bx21, Bx22, ... , BxNtNp, By11, ... , Bz11, ...},
 * where Nt and Np are the number of discretizations in toroidal and
 * poloidal directions.
 *
 * @param[in] Nt input B-field discretization order in toroidal direction (in one field period).
 *
 * @param[in] Np input B-field discretization order in poloidal direction.
 *
 * @param[in] virtual-casing context pointer.
 */
void VirtualCasingComputeBextF(float* Bext, const float* B, long Nt, long Np, const void* ctx);
void VirtualCasingComputeBextD(double* Bext, const double* B, long Nt, long Np, const void* ctx);

/**
 * Generate B field data to be used for testing virtual-casing.
 *
 * Generate B field data to be used with class VirtualCasing.
 *
 * @param[out] Bext magnetic field generated by an internal current loop.
 *
 * @param[out] Bint magnetic field generated by an external current loop.
 *
 * @param[in] NFP number of toroidal field periods.
 *
 * @param[in] trg_Nt output B-field discretization order in toroidal direction (in one field period).
 *
 * @param[in] trg_Np output B-field discretization order in poloidal direction.
 *
 * @param[in] X the surface coordinates in the order {x11, x12, ..., x1Np,
 * x21, x22, ... , xNtNp, y11, ... , z11, ...}.
 *
 * @param[in] Nt surface discretization order in toroidal direction (in one field period).
 *
 * @param[in] Np surface discretization order in poloidal direction.
 *
 * @return Bext and Bint, magnetic fields generated by an internal current loop and
 *  an external current loop respectively.
 */
void GenerateVirtualCasingTestDataF(float* Bext, float* Bint, int NFP, long trg_Nt, long trg_Np, const float* X, long Nt, long Np);
void GenerateVirtualCasingTestDataD(double* Bext, double* Bint, int NFP, long trg_Nt, long trg_Np, const double* X, long Nt, long Np);

#ifdef __cplusplus
}
#endif

#endif
